services
> Make modified error on database side by read error send by postgres using pgx error package.
__________________________________________________________________________________

API
> (done) Send error for POST "/accounts" when input data is wrong.
> (done) Add struct tags (json)
> (done) Validate data from request body using tags
> Make modified error on server side by send spesific reason for the error using json.
> Change manual validator (If else) with validator package on account_test
> 'validAccount' >> Detect no data on database by check error send by postgres using 
                    pgx error package
__________________________________________________________________________________

API/transfer
> Error coverage :
    - (done) different currency (from-to account, input-account)
    - (done) not enough money to transfer
__________________________________________________________________________________

testing
> Make func for testify output and input

__________________________________________________________________________________

DB Error coverage
db/services/Account
> (done) Make account for an owner that doesn't exist. | code:(1)
> (done) Create more than 1 account with the same owner. | code:(2)
> (done) Get account that doesn't exist.
> (done) List account that doesn't exist.
> Delete account that doesn't exist.
----------------------------------------------------------------------------------
db/api/user
> 
__________________________________________________________________________________

POSTGRES ERROR CODE:
(1) "ERROR: insert or update on table \"accounts\" violates foreign key constraint \"accounts_owner_fkey\" (SQLSTATE 23503)"
(2) "ERROR: duplicate key value violates unique constraint \"accounts_owner_currency_idx\" (SQLSTATE 23505)"
"ERROR: new row for relation \"accounts\" violates check constraint \"accounts_balance_check\" (SQLSTATE 23514)"
__________________________________________________________________________________